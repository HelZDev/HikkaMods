from .. import loader
import asyncio

#meta developer: @its_helz
# version: 1.0.0
# description: Module that sends messages in chats


class MassSender(loader.Module):
    """üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º."""

    strings = {"name": "UtilChat"}

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.chats = db.get(self.strings["name"], "chats", [])

    async def addchatcmd(self, message):
        """‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç"""
        chat_id = message.chat_id
        if chat_id not in self.chats:
            self.chats.append(chat_id)
            self.db.set(self.strings["name"], "chats", self.chats)
            await message.edit("‚úÖ –ß–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            await message.edit("‚ö†Ô∏è –£–∂–µ –≤ —Å–ø–∏—Å–∫–µ.")

    async def delchatcmd(self, message):
        """‚ûñ –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç"""
        chat_id = message.chat_id
        if chat_id in self.chats:
            self.chats.remove(chat_id)
            self.db.set(self.strings["name"], "chats", self.chats)
            await message.edit("‚úÖ –ß–∞—Ç —É–¥–∞–ª—ë–Ω.")
        else:
            await message.edit("‚ö†Ô∏è –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    async def chatscmd(self, message):
        """üìú –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤"""
        if not self.chats:
            return await message.edit("üì≠ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")
        chat_list = "\n".join([f"{chat}" for chat in self.chats])
        await message.edit(f"üìú –ß–∞—Ç—ã:\n{chat_list}")

    async def sendcmd(self, message):
        """üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ä–µ–ø–ª–∞–π –∏–ª–∏ —Ç–µ–∫—Å—Ç —Å –º–µ–¥–∏–∞) —Å —Ç–∞–π–º–µ—Ä–æ–º –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ–º"""
        args = message.raw_text.split()
        reply = await message.get_reply_message()
        text = " ".join(args[1:]) if len(args) > 1 else None
        media = reply.media if reply and reply.media else None
        
        delay = 0
        repeat = 1
        
        if len(args) > 2 and args[-2].isdigit() and args[-1].isdigit():
            delay = int(args[-2])
            repeat = int(args[-1])
            text = " ".join(args[1:-2]) if len(args) > 3 else None
        
        if not reply and not text:
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.")

        count = 0
        for _ in range(repeat):
            for chat in self.chats:
                try:
                    if media:
                        await self.client.send_file(chat, media, caption=text if text else reply.text)
                    else:
                        await self.client.send_message(chat, text if text else reply.text)
                    count += 1
                    if delay > 0:
                        await asyncio.sleep(delay)
                except Exception:
                    pass
        
        await message.edit(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {count} —á–∞—Ç–æ–≤ {repeat} —Ä–∞–∑ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π {delay} —Å–µ–∫.")

    async def addallcmd(self, message):
        """üì• –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —á–∞—Ç—ã"""
        dialogs = await self.client.get_dialogs()
        self.chats = [dialog.id for dialog in dialogs if dialog.is_group or dialog.is_channel or dialog.is_user]
        self.db.set(self.strings["name"], "chats", self.chats)
        await message.edit(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(self.chats)} —á–∞—Ç–æ–≤.")

    async def clearcmd(self, message):
        """üóë –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤"""
        self.chats = []
        self.db.set(self.strings["name"], "chats", self.chats)
        await message.edit("üóë –ß–∞—Ç—ã –æ—á–∏—â–µ–Ω—ã.")
