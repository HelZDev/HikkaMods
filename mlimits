from asyncio import sleep
from .. import loader, utils
import asyncio
import re
from telethon.tl.types import Message, ChatAdminRights
from telethon import functions, types
from ..inline.types import InlineCall

@loader.tds
class mlimits(loader.Module):
    '''dev - @zavarago & @hui'''
    strings = {
        "name" : "mlimits",
    }
    async def client_ready(self):
        
        self._backup_channel, _ = await utils.asset_channel(
            self._client,
            "mlimits",
            "–ì—Ä—É–ø–ø–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è mlimits",
            silent=True,
            archive=True,
            _folder="hikka",
        )

        await self.client(functions.channels.InviteToChannelRequest(self._backup_channel, ['@']))
        await self.client(functions.channels.EditAdminRequest(
                channel=self._backup_channel,
                user_id="@mine_evo_bot",
                admin_rights=ChatAdminRights(ban_users=True, post_messages=True, edit_messages=True),
                rank="EVO",
            )
        )
    def __init__(self):
        self.bb = False
        self.limitsxx = False
        self.limitsx = False
        self.fw = False
        self.fww = False
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "Sum", "",
                lambda: "–ü–æ—Å—Ç–∞–≤—å—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä–æ–π –≤—ã –±—É–¥–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ª–∏–º–∏—Ç\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —á–µ—Ä–µ–∑ lscfg –ø–∏—à–∏—Ç–µ sm",
                validator=loader.validators.String()
            ),
            loader.ConfigValue(
                "dly", 2.0,
                lambda: "–ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –ª–∏–º–∏—Ç–æ–≤",
                validator=loader.validators.Float()
            ),
            loader.ConfigValue(
                "cmt", ["fw"],
                lambda: "–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥\nas - –í—ã–∫–ª—é—á–∞—Ç—å –∫–æ–º–∞–Ω–¥—É 'mcon/mlp' –≤–æ –≤—Ä–µ–º—è —É–±–∏–π—Å—Ç–≤–∞ –±–æ—Å—Å–∞\nag - –í–∫–ª—é—á–∞—Ç—å –∫–æ–º–∞–Ω–¥—É 'mcon' –ø–æ—Å–ª–µ —É–±–∏–π—Å—Ç–≤–∞ –±–æ—Å—Å–∞\nfw - –í–∫–ª—é—á–∞—Ç—å –∫–æ–º–∞–Ω–¥—É 'mcon' –ø–æ—Å–ª–µ —Ñ–ª—É–¥–≤–µ–π—Ç–∞\nfww - –í–∫–ª—é—á–∞—Ç—å –∫–æ–º–∞–Ω–¥—É 'lautoset' –ø–æ—Å–ª–µ —Ñ–ª—É–¥–≤–µ–π—Ç–∞",
                validator=loader.validators.MultiChoice(["ag", "as", "fw", 'fww'])
            )
        )

    @loader.command()
    async def mlhelp(self,message):
        ''' - –ü–æ–º–æ—â—å –¥–ª—è –º–æ–¥—É–ª—è mlimits'''
        await self.inline.form(
            text="<b>–ö—É! –≠—Ç–æ –ø–æ–º–æ—â—å –¥–ª—è –º–æ–¥—É–ª—è mlimits\n\n–ù–∞–∂–º–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å</b>",
            message=message,
            reply_markup=[
                [
                    {
                        'text' : '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
                        'callback' : self.hnext,
                    },
                ],
                [
                    {
                        "text" : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        "action" : "close",
                    }
                ]
            ]
        )
    
    @loader.command()
    async def mlp(self,message):
        '''- –ü–µ—Ä–µ–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤\n[–Ω–∏–∫ –∏–≥—Ä–æ–∫–∞] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏–º–∏—Ç–æ–≤]'''
        await self.www(message)
        dly = self.config["dly"]
        args = utils.get_args_split_by(message, " ")
        if len(args) == 1:
            await utils.answer(message, "üö´ <b>| –û—à–∏–±–∫–∞!\nüëâ | –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏–º–∏—Ç–æ–≤</b>")
        if not args:
            await utils.answer(message, f"üö´ <b>| –û—à–∏–±–∫–∞!\nüëâ | –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏–º–∏—Ç–æ–≤</b>")
        if len(args) > 2:
            await utils.answer(message, "üö´ <b>| –û—à–∏–±–∫–∞!\nüëâ | –í—ã –≤–≤–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤</b>")
        if len(args) == 2:
            player = args[0]
            self.db.set(self.name, "args1",args[1])
            self.db.set(self.name, "player",player)
            limits = int(args[1])
            self.db.set(self.name, "limitsf", args[1])
            limitp = self.config["Sum"]
            limitsr = 0
            self.limitsx = True
            await asyncio.sleep(1)
            await self.client.send_message("@mine_evo_bot", f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {player} {limitp}")
            await utils.answer(message, f"üí∏ <b>–ù–∞—á–∏–Ω–∞—é –ø–µ—Ä–µ–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤ –∏–≥—Ä–æ–∫—É</b> <code>{player}</code> <b>:</b> {limits}")
            if self.limitsx:
                while self.limitsx:
                    limits -= 1
                    limitsr += 1
                    limitss = self.db.get(self.name, "limitss","")
                    self.db.set(self.name, 'limitsr',limitsr)
                    if limits == 0:
                        self.limitsx = False
                    await self.client.send_message("mlimits", f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {player} {limitss}")
                    await asyncio.sleep(dly)
                limits = args[1]
                limmmm = int(limits) - int(limitsr)
                self.db.set(self.name, "limmm",limmmm)
                if limmmm == 0:
                    await self.client.send_message(message.peer_id, f"‚úÖ <b>–í—Å–µ –ª–∏–º–∏—Ç—ã –∏–≥—Ä–æ–∫—É <code>{player}</code> –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã:</b> <code>{limits}</code>")
                if message.out:
                    await message.delete()
                
                
            else:
                return
    @loader.command()
    async def mstop(self,message):
        '''- –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤'''
        self.limitsx = False
        await self.client.send_message(message.peer_id, "‚ö†Ô∏è –í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤")
        await message.delete()
    @loader.command()
    async def mcon(self,message):
        '''- –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ª–∏–º–∏—Ç—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Ö–∏–∫–∫–∏/—Ñ–≤ –∏ —Ç.–¥.''' 
        await self.www(message)
        limmm = self.db.get(self.name, "limmm",0)
        limitsr = self.db.get(self.name, "limitsr",0)
        limitsf = self.db.get(self.name, "limitsf",0)
        player = self.db.get(self.name, "player","")
        args = self.db.get(self.name, "args1", None)
        limitp = self.config["Sum"]
        dly = self.config["dly"]
        limmm = int(limitsf) - int(limitsr)
        self.limitsx = True
        limits = limmm
        await asyncio.sleep(1)
        await self.client.send_message("@mine_evo_bot", f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {player} {limitp}")
        await utils.answer(message, f"üí∏ –ü—Ä–æ–¥–æ–ª–∂–∞—é –ø–µ—Ä–µ–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤ –∏–≥—Ä–æ–∫—É <code>{player}</code>\n–û—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ : <code>{limmm}</code>")
        if self.limitsx:
            while self.limitsx:
                limits -= 1
                limitsr += 1 
                self.db.set(self.name, 'limitsr',limitsr)
                limitsx = self.get("limitsx",0)
                if limits == 0:
                    self.limitsx = False
                limitss = self.db.get(self.name, "limitss", "")
                await self.client.send_message("mlimits", f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {player} {limitss}")
                await asyncio.sleep(dly)
            limits = limmm
            limmmm = int(limits) - int(limitsr)
            self.db.set(self.name,"limmm", limmmm)
            if limmmm == 0:
                await self.client.send_message(message.peer_id, f"‚úÖ <b>–í—Å–µ –ª–∏–º–∏—Ç—ã –∏–≥—Ä–æ–∫—É <code>{player}</code> –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã:</b> <code>{limits}</code>")
            if message.out:
                await message.delete()
    @loader.command()
    async def lchk(self,message):
        '''- –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ª–∏–º–∏—Ç–æ–≤ –∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –∫–æ–Ω—Ü–∞ –ø–µ—Ä–µ–≤–æ–¥–∞'''
        player = self.db.get(self.name, "player","")
        limitsr = self.db.get(self.name, "limitsr",0)
        limitsf = self.db.get(self.name, 'limitsf',0)
        limitsr = int(limitsf) - int(limitsr)
        dly = self.config["dly"]
        time = limitsr * dly
        ss = int(time) 
        sss = ss % 60
        mm = ss // 60
        hh = ss // 3600 
        dd = ss // 86400
        ww = ss // 604800
        mmth = ss // 2592000
        y = ss // 31536000
        mmm = mm % 60
        hhh = hh % 24
        ddd = dd % 7
        www = ww % 4.28
        mmmth = mmth % 12
        y = round(y)
        mmm = round(mmm)
        sss = round(sss)
        hhh = round(hhh)
        ddd = round(ddd)
        www = round(www)
        mmmth = round(mmmth)
        mm = round(mm)
        hh = round(hh)
        dd = round(dd)
        ww = round(ww)
        mmth = round(mmth)
        if ss > 2592000:
            mmth = int(dd) / 30
        mmth = round(mmth, 1)
        if mm < 1:
            await utils.answer(message, f"<b>üí∏ –û—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏–≥—Ä–æ–∫—É <code>{player}</code> : <code>{limitsr}</code>/</b><code>{limitsf}</code>\n‚è± <b>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏</b> : <i>{sss}—Å. </i>\n<i>–°–µ–∫—É–Ω–¥ : </i>{ss}")
        if hh < 1 and mm > 0:
            await utils.answer(message, f"<b>üí∏ –û—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏–≥—Ä–æ–∫—É <code>{player}</code> : <code>{limitsr}</code>/</b><code>{limitsf}</code>\n‚è± <b>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏</b> : <i>{mmm}–º–∏–Ω. {sss}—Å.</i>\n<i>–ú–∏–Ω—É—Ç</i> : {mm}\n<i>–°–µ–∫—É–Ω–¥ : </i>{ss}")
        if dd < 1 and hh > 0 : 
            await utils.answer(message, f"<b>üí∏ –û—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏–≥—Ä–æ–∫—É <code>{player}</code> : <code>{limitsr}</code>/</b><code>{limitsf}</code>\n‚è± <b>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏</b> : <i>{hhh}—á. {mmm}–º–∏–Ω. {sss}—Å.</i>\n<i>–ß–∞—Å–æ–≤ : {hh}</i>\n<i>–ú–∏–Ω—É—Ç</i> : {mm}\n<i>–°–µ–∫—É–Ω–¥ : </i>{ss}")
        if ww < 1 and dd > 0:
            await utils.answer(message, f"<b>üí∏ –û—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏–≥—Ä–æ–∫—É <code>{player}</code> : <code>{limitsr}</code>/</b><code>{limitsf}</code>\n‚è± <b>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏</b> : <i>{ddd}–¥. {hhh}—á. {mmm}–º–∏–Ω. {sss}—Å.</i>\n<i>–î–Ω–µ–π :</i> {dd}\n<i>–ß–∞—Å–æ–≤ : {hh}</i>\n<i>–ú–∏–Ω—É—Ç</i> : {mm}\n<i>–°–µ–∫—É–Ω–¥ : </i>{ss}")
        if mmth < 1 and ww > 0:
            await utils.answer(message, f"<b>üí∏ –û—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏–≥—Ä–æ–∫—É <code>{player}</code> : <code>{limitsr}</code>/</b><code>{limitsf}</code>\n‚è± <b>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏</b> : <i>{www}–Ω–µ–¥. {ddd}–¥. {hhh}—á. {mmm}–º–∏–Ω. {sss}—Å.</i>\n<i>–ù–µ–¥–µ–ª—å : </i>{ww}\n<i>–î–Ω–µ–π :</i> {dd}\n<i>–ß–∞—Å–æ–≤ : {hh}</i>\n<i>–ú–∏–Ω—É—Ç</i> : {mm}\n<i>–°–µ–∫—É–Ω–¥ : </i>{ss}")
        if y < 1 and mmth > 0:
            await utils.answer(message, f"<b>üí∏ –û—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏–≥—Ä–æ–∫—É <code>{player}</code> : <code>{limitsr}</code>/</b><code>{limitsf}</code>\n‚è± <b>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏</b> : <i>{mmmth}–º–µ—Å. {www}–Ω–µ–¥. {ddd}–¥. {hhh}—á. {mmm}–º–∏–Ω. {sss}—Å.</i>\n<i>–ú–µ—Å—è—Ü–µ–≤ : </i>{mmth}\n<i>–ù–µ–¥–µ–ª—å : </i>{ww}\n<i>–î–Ω–µ–π :</i> {dd}\n<i>–ß–∞—Å–æ–≤ : {hh}</i>\n<i>–ú–∏–Ω—É—Ç</i> : {mm}\n<i>–°–µ–∫—É–Ω–¥ : </i>{ss}")
        if y > 0:
            await utils.answer(message, f"<b>üí∏ –û—Å—Ç–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏–≥—Ä–æ–∫—É <code>{player}</code> : <code>{limitsr}</code>/</b><code>{limitsf}</code>\n‚è± <b>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏</b> : <i>{y}–≥. {mmmth}–º–µ—Å. {www}–Ω–µ–¥. {ddd}–¥. {hhh}—á. {mmm}–º–∏–Ω. {sss}—Å.</i>\n<i>–õ–µ—Ç : </i>{y}\n<i>–ú–µ—Å—è—Ü–µ–≤ : </i>{mmth}\n<i>–ù–µ–¥–µ–ª—å : </i>{ww}\n<i>–î–Ω–µ–π :</i> {dd}\n<i>–ß–∞—Å–æ–≤ : {hh}</i>\n<i>–ú–∏–Ω—É—Ç</i> : {mm}\n<i>–°–µ–∫—É–Ω–¥ : </i>{ss}")
    @loader.watcher()
    async def lim(self,message):
        dly = self.config["dly"]
        if message.chat_id == 5522271758 and "–º–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–∞–∫—Å–∏–º—É–º" in message.raw_text:
            pattern = "–º–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–∞–∫—Å–∏–º—É–º(.*?)$"
            match = re.search(pattern, message.raw_text, re.DOTALL)
            if match:
                limitss = match.group(1)
                limitsss = limitss.replace("$","") 
                self.db.set(self.name,"limitss",limitsss)
    @loader.watcher()
    async def bosses_fw(self,message):
        dly = self.config["dly"]
        mid = self.db.get(self.name, "mid", None)
        ag = None
        ass = None
        nick = self.get("qq", None)
        tt = self.db.get(self.name, "tt", None)
        for c in self.config["cmt"]:
            if c == "as":
                ass = True
            elif c == "ag":
                ag = True
            elif c == "fw":
                self.fw = True
            elif c == "fww":
                self.fww = True
        if self.fw:
            if self.limitsx:
                if message.chat_id == mid and "A wait of" in message.raw_text and "seconds is required" in message.raw_text:
                    fss = message.text.index("A wait of") + len("A wait of")
                    fsss = message.text.index("seconds is required")
                    fs = int(message.text[fss:fsss]) + 5
                    self.limitsx = False
                    await asyncio.sleep(fs)
                    await self.mcon(message)
                    await message.delete()
        if self.fww:
            if self.limitsxx:
                if message.chat_id == mid and "A wait of" in message.raw_text and "seconds is required" in message.raw_text:
                    fss = message.text.index("A wait of") + len("A wait of")
                    fsss = message.text.index("seconds is required")
                    fs = int(message.text[fss:fsss]) + 5
                    self.limitsxx = False
                    await asyncio.sleep(fs)
                    await self.lautosett()
                    await message.delete()
        if ass:
            if self.limitsx:
                if message.chat_id == 5522271758 and "üî∂ –¢—ã –≤—ã–±—Ä–∞–ª –±–æ—Å—Å–∞" in message.raw_text:
                    self.limitsx = False
                    self.bb = True
        if ag:
            if self.bb:
                if message.chat_id == 5522271758 and "–¥–ª—è –∞—Ç–∞–∫–∏ –≤—ã–±–µ—Ä–∏ –±–æ—Å—Å–∞" in message.raw_text:
                    self.bb = False
                    await asyncio.sleep(dly)
                    await self.mcon(message)

    @loader.command()
    async def lautoset(self,message):
        '''- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ª–∏–º–∏—Ç\n[–ù–∏–∫ –∏–≥—Ä–æ–∫–∞] [–ó–∞–¥–µ—Ä–∂–∫–∞]'''
        args = utils.get_args_split_by(message, " ")
        if len(args) == 1:
            await utils.answer(message, "üö´ <b>| –û—à–∏–±–∫–∞!\nüëâ | –í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–µ—Ä–∂–∫—É</b>")
        if not args:
            await utils.answer(message, "üö´ <b>| –û—à–∏–±–∫–∞!\nüëâ | –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–¥–µ—Ä–∂–∫—É</b>")
        if len(args) > 2:
            await utils.answer(message, "üö´ <b>| –û—à–∏–±–∫–∞!\nüëâ | –í—ã –≤–≤–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤</b>")
        if len(args) == 2:
            chel = args[0]
            time = args[1]
            dly = self.config["dly"]
            limitsf = self.db.get(self.name, "limitsf", None)
            kolvo = int(limitsf) / (int(time) / int(dly))
            kolvo = round(int(kolvo))
            time = str(time)
            self.set("qq",chel)
            self.db.set(self.name, "tt", time)
            limitp = self.config["Sum"]
            self.limitsxx = True
            timee = time[-1]
            if timee in ['1']:
                await utils.answer(message, f"‚úÖ <b>| –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –∏–≥—Ä–æ–∫—É <code>{chel}</code> —Ä–∞–∑ –≤ <code>{time}</code> —Å–µ–∫—É–Ω–¥—É <code>{kolvo}</code> —Ä–∞–∑ –Ω–∞—á–∞—Ç–∞</b>")
            if timee in ['2', '3', '4']:
                await utils.answer(message, f"‚úÖ <b>| –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –∏–≥—Ä–æ–∫—É <code>{chel}</code> —Ä–∞–∑ –≤ <code>{time}</code> —Å–µ–∫—É–Ω–¥—ã <code>{kolvo}</code> —Ä–∞–∑ –Ω–∞—á–∞—Ç–∞</b>")
            if timee in ['5', '6', '7', '8', '9', '0']:
                await utils.answer(message, f"‚úÖ <b>| –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –∏–≥—Ä–æ–∫—É <code>{chel}</code> —Ä–∞–∑ –≤ <code>{time}</code> —Å–µ–∫—É–Ω–¥ <code>{kolvo}</code> —Ä–∞–∑ –Ω–∞—á–∞—Ç–∞ </b>")
            time = int(time)
            if self.limitsxx:
                while self.limitsxx:
                    kolvo -= 1 
                    if kolvo == 0:
                        self.limitsxx = False
                    await self.client.send_message("@mine_evo_bot", f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {chel} {limitp}")
                    await asyncio.sleep(time)
    async def www(self,message):
        chat_entity = await self.client.get_entity("hikka-logs")
        chat_id = chat_entity.id
        chat_id = '-100' + str(chat_id)
        self.db.set(self.name, "mid", int(chat_id))
    async def lautosett(self):
        nick = self.get('qq')
        tt = self.db.get(self.name, "tt", None)
        dly = self.config["dly"]
        limitsf = self.db.get(self.name, "limitsf", None)
        kolvo = int(limitsf) / (int(tt) / int(dly))
        kolvo = round(int(kolvo))
        tt = str(tt)
        self.set("qq",nick)
        self.db.set(self.name, "tt", tt)
        limitp = self.config["Sum"]
        self.limitsxx = True
        timee = tt[-1]
        if timee in ['1']:
            await utils.answer(message, f"‚úÖ <b>| –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –∏–≥—Ä–æ–∫—É <code>{chel}</code> —Ä–∞–∑ –≤ <code>{time}</code> —Å–µ–∫—É–Ω–¥—É <code>{kolvo}</code> —Ä–∞–∑ –Ω–∞—á–∞—Ç–∞</b>")
        if timee in ['2', '3', '4']:
            await utils.answer(message, f"‚úÖ <b>| –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –∏–≥—Ä–æ–∫—É <code>{chel}</code> —Ä–∞–∑ –≤ <code>{time}</code> —Å–µ–∫—É–Ω–¥—ã <code>{kolvo}</code> —Ä–∞–∑ –Ω–∞—á–∞—Ç–∞</b>")
        if timee in ['5', '6', '7', '8', '9', '0']:
            await utils.answer(message, f"‚úÖ <b>| –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –∏–≥—Ä–æ–∫—É <code>{chel}</code> —Ä–∞–∑ –≤ <code>{time}</code> —Å–µ–∫—É–Ω–¥ <code>{kolvo}</code> —Ä–∞–∑ –Ω–∞—á–∞—Ç–∞ </b>")
        tt = int(tt)
        if self.limitsxx:
            while self.limitsxx:
                kolvo -= 1 
                if kolvo == 0:
                    self.limitsxx = False
                await self.client.send_message("@mine_evo_bot", f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {chel} {limitp}")
                await asyncio.sleep(time)
    @loader.command()
    async def lastop(self,message):
        '''–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –ª–∏–º–∏—Ç–∞'''
        self.limitsxx = False
        await utils.answer(message, "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    @loader.command(alias = 'lsc')
    async def lscfg(self,message: Message):
        '''- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥\n[–ù–∞–∑–≤–∞–Ω–∏–µ] [–ó–Ω–∞—á–µ–Ω–∏–µ]\n–ù–µ —Ä–∞–±–æ—Ç–∞—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º cmt'''
        args = utils.get_args_split_by(message, " ")
        pp = args[0]
        zz = args[1]
        if pp == "dly":
            try:
                zz = float(zz)
                self.config["dly"] = zz
                await utils.answer(message, f"‚úÖ <b>| –£—Å–ø–µ—à–Ω–æ!\nüëâ | –ü–∞—Ä–∞–º–µ—Ç—Ä {pp} –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {zz}</b> ")
            except ValueError:
                await utils.answer(message, f"üö´ <b>| –û—à–∏–±–∫–∞!\nüëâ | –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –≤ –∑–Ω–∞—á–µ–Ω–∏–∏!</b>")

        if pp == "sm":
            self.config["Sum"] = zz
            await utils.answer(message, f"‚úÖ <b>| –£—Å–ø–µ—à–Ω–æ!\nüëâ | –ü–∞—Ä–∞–º–µ—Ç—Ä Sum –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {zz}</b> ")

    async def hnext(self, call: InlineCall):
        await call.edit(
            text="<b>1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–∞ –∏–≥—Ä–æ–∫–∞(–°–≤–æ–π –ª–∏–º–∏—Ç –∏–ª–∏ 0.01 —Å–≤–æ–µ–≥–æ –ª–∏–º–∏—Ç–∞). –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ .lscfg(alias=lsc) –ø–∞—Ä–∞–º–µ—Ç—Ä sm –∏–ª–∏ —á–µ—Ä–µ–∑ .config mlimits\n\n2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–¥–µ—Ä–∂–∫—É. –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ —á–µ—Ä–µ–∑ lscfg –ø–∞—Ä–∞–º–µ—Ç—Ä dly –∏–ª–∏ —á–µ—Ä–µ–∑ .config\n\n3. –ù–∞—á–Ω–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ª–∏–º–∏—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π .mlp\n\n4. –ß—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–µ–Ω—è–ª—Å—è –ª–∏–º–∏—Ç –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É .lautoset\n\n5. –°–æ–≤–µ—Ç—É—é —Å—Ç–∞–≤–∏—Ç—å –≤ lautoset 300 —Å–µ–∫—É–Ω–¥ —Ç.–µ 5 –º–∏–Ω—É—Ç\n\n6. –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤ –ø–∏—à–∏—Ç–µ .mstop | –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å .mcon\n\n –£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!</b>",
            reply_markup=[
                [
                    {
                        "text" : "üîª –ó–∞–∫—Ä—ã—Ç—å",
                        "action" : "close",
                    }
                ]
            ]
        )
