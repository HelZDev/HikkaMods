from .. import loader
import asyncio

#meta developer: @its_helz @Vert5x
# version: 1.2.0
# description: Module that sends messages in chats and users


class MassSender(loader.Module):
    """üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º."""

    strings = {"name": "UtilChat"}

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.chats = db.get(self.strings["name"], "chats", [])
        self.users = db.get(self.strings["name"], "users", [])

    async def addchatcmd(self, message):
        """‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç"""
        chat_id = message.chat_id
        if chat_id not in self.chats:
            self.chats.append(chat_id)
            self.db.set(self.strings["name"], "chats", self.chats)
            await message.edit("‚úÖ –ß–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            await message.edit("‚ö†Ô∏è –£–∂–µ –≤ —Å–ø–∏—Å–∫–µ.")

    async def addusercmd(self, message):
        """‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É –∏–ª–∏ ID"""
        args = message.raw_text.split()[1:]
        if not args:
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –∏–ª–∏ ID.")
        
        for user in args:
            if user not in self.users:
                self.users.append(user)
        
        self.db.set(self.strings["name"], "users", self.users)
        await message.edit(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(args)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")

    async def importuserscmd(self, message):
        """üì• –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Ö —Å–ø–∏—Å–æ–∫"""
        chat = await message.get_chat()
        if not chat:
            return await message.edit("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Ç–∞.")
        
        users = []
        async for user in self.client.iter_participants(chat):
            if user.username and user.username not in self.users:
                users.append(user.username)
        
        self.users.extend(users)
        self.db.set(self.strings["name"], "users", self.users)
        
        chat_name = chat.title if chat.title else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
        user_list = "\n".join([f"@{user}" for user in users]) if users else "üì≠ –ù–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
        
        await message.edit(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ {chat_name}.")
        
        if users:
            await self.client.send_message(message.chat_id, f"üìú –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ {chat_name}:\n{user_list}")

    async def sendcmd(self, message):
        """üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ä–µ–ø–ª–∞–π –∏–ª–∏ —Ç–µ–∫—Å—Ç) –ø—Ä–∏–º–µ—Ä <<.send text 3 2>> """
        args = message.raw_text.split()
        reply = await message.get_reply_message()
        text = " ".join(args[1:]) if len(args) > 1 else None
        media = reply.media if reply and reply.media else None
        
        delay = 0
        repeat = 1
        
        if len(args) > 2 and args[-2].isdigit() and args[-1].isdigit():
            delay = int(args[-2])
            repeat = int(args[-1])
            text = " ".join(args[1:-2]) if len(args) > 3 else None
        
        if not reply and not text:
            return await message.edit("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.")

        count = 0
        for _ in range(repeat):
            for recipient in self.chats + self.users:
                try:
                    if media:
                        await self.client.send_file(recipient, media, caption=text if text else reply.text)
                    else:
                        await self.client.send_message(recipient, text if text else reply.text)
                    count += 1
                    if delay > 0:
                        await asyncio.sleep(delay)
                except Exception:
                    pass
        
        await message.edit(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {count} —á–∞—Ç–æ–≤/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {repeat} —Ä–∞–∑ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π {delay} —Å–µ–∫.")

    async def chatscmd(self, message):
        """üìú –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        chat_list = "\n".join([f"{chat}" for chat in self.chats]) if self.chats else "üì≠ –ß–∞—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
        user_list = "\n".join([f"@{user}" for user in self.users]) if self.users else "üì≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
        await message.edit(f"üìú –ß–∞—Ç—ã:\n{chat_list}\n\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n{user_list}")

    async def clearcmd(self, message):
        """üóë –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        self.chats = []
        self.users = []
        self.db.set(self.strings["name"], "chats", self.chats)
        self.db.set(self.strings["name"], "users", self.users)
        await message.edit("üóë –ß–∞—Ç—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ—á–∏—â–µ–Ω—ã.")
